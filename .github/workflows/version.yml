name: Version Bump

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  version-bump:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Determine version bump type
        id: bump-type
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          if [[ $PR_TITLE == *"!"* ]] || [[ $PR_TITLE == "BREAKING CHANGE"* ]]; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif [[ $PR_TITLE == "feat"* ]]; then
            echo "type=minor" >> $GITHUB_OUTPUT
          else
            echo "type=patch" >> $GITHUB_OUTPUT
          fi

      - name: Get current version
        id: current-version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Bump version
        id: version-bump
        run: |
          BUMP_TYPE=$(echo "${{ steps.bump-type.outputs.type }}")
          NEW_VERSION=$(npm --no-git-tag-version version $BUMP_TYPE)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          # Update package.json
          git add package.json
          git commit -m "chore: bump version to ${NEW_VERSION} [skip ci]"
          git push

          # Create and push tag separately
          git tag -a ${NEW_VERSION} -m "Release ${NEW_VERSION}"
          git push origin ${NEW_VERSION} 