---
description: AIFrame Framework Design Patterns
Guidelines for implementing and maintaining design patterns in AIFrame.

patterns: ["**/*"]

rules:
  # Architectural Patterns
  - COMPONENT-BASED ARCHITECTURE
    * Each component has clear intent
    * Components are self-contained
    * Follow single responsibility principle
    * Implement proper interfaces
    * Include comprehensive tests

  - EVENT-DRIVEN DESIGN
    * Use clear event naming
    * Maintain event history
    * Handle event failures gracefully
    * Implement proper rollback
    * Document event flows

  - PERSISTENCE PATTERNS
    * Use appropriate adapters
    * Implement proper transactions
    * Handle connection failures
    * Manage resource cleanup
    * Monitor performance

  # Implementation Patterns
  - ERROR HANDLING
    * Use appropriate error types
    * Include context in errors
    * Log meaningful messages
    * Implement recovery strategies
    * Clean up resources

  - TESTING PATTERNS
    * Write comprehensive unit tests
    * Include integration tests
    * Test edge cases
    * Mock external dependencies
    * Maintain test isolation

  - PERFORMANCE PATTERNS
    * Profile critical paths
    * Optimize resource usage
    * Monitor memory consumption
    * Handle concurrent operations
    * Implement proper caching

  # Development Workflow
  - Version Control
    * Write meaningful commits
    * Keep changes focused
    * Review code thoroughly
    * Maintain clean history
    * Document breaking changes

  - Documentation
    * Keep docs current
    * Include examples
    * Document assumptions
    * Explain complex logic
    * Update README

Getting Started:
  1. Review existing patterns
  2. Follow established conventions
  3. Test thoroughly
  4. Document changes
  5. Seek feedback

@file src/core/types.ts
@file src/core/runtime.ts 